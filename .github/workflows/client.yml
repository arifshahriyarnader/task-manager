name: Client Cl

on:
  push:
    branches: [ main ]
    paths:
      - 'client/*'
      - '.github/workflows/client.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'client/*'
      - '.github/workflows/client.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./client/package-lock.json

      - name: Install dependencies
        run: npm install
        working-directory: ./client 
      
      - name: Build React app
        run: npm run build
        working-directory: ./client
      
     # - name: Configure AWS credentials
     #   uses: aws-actions/configure-aws-credentials@v2
     #   with:
     #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
     #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     #     aws-region: ${{ secrets.AWS_REGION }}

     # - name: Login to Amazon ECR
     #   id: login-ecr
     #   uses: aws-actions/amazon-ecr-login@v2
    
     # - name: Build, tag, and push Docker image
     #   id: build-image
     #   env:
     #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
     #     ECR_REPOSITORY: task-manager-client
     #     IMAGE_TAG: latest
     #   run: |
     #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./client
     #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Deploy to Amazon ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      #   with:
      #     task-definition: client-taskdef.json
      #     service: TaskManager-Frontend-Service
      #     cluster: TaskManager-Cluster
      #     wait-for-service-stability: true